//solution 1
class Solution {
    public int longestConsecutive(int[] nums) {
        if(nums.length == 1) return 1;
        Arrays.sort(nums);
        int len = 1, maxLen = 0;
        for(int i = 1; i < nums.length; i++){
            if(nums[i] - nums[i - 1] == 1){
                len++;
                maxLen = Math.max(len, maxLen);
            } else{
                len = 1;
            }
        }
        return maxLen;
    }
}

//solution 2
class Solution {
    public int longestConsecutive(int[] nums) {
        Set<Integer> set = new HashSet();
        for(int i: nums){
            set.add(i);
        }
        int maxLen = 0;
        for(int i: nums){
            if(set.remove(i)){
                int pre = i - 1, next = i + 1;
           
                while(set.remove(pre)){
                    pre--;
                }
                while(set.remove(next)){
                    next++;
                }
                maxLen = Math.max(maxLen, next - pre - 1);
            }
        }
        return maxLen;
    }
}
