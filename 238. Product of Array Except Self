//solution 1
class Solution {
    public int[] productExceptSelf(int[] nums) {
        int prod = 1;
        int zeroCnt = 0;
        for(int i: nums) {
            if (i != 0) {
                prod *= i;
            } else {
                zeroCnt++;
            }
        }
        int[] ans = new int[nums.length];
        for (int i = 0; i < nums.length; i++) {
            if (zeroCnt == 0) ans[i] = prod / nums[i];
            else if (zeroCnt == 1 && nums[i] != 0 || zeroCnt > 1) ans[i] = 0;
            else ans[i] = prod;
        }
        return ans;
    }
}

//solution 2
class Solution {
    public int[] productExceptSelf(int[] nums) {
        int n = nums.length;
        int[] ans = new int[n];
        ans[0] = 1;
        for(int i = 1; i < n ; i++) {
            ans[i] = ans[i - 1] * nums[i - 1];
        }
        int right = 1;
        for (int i = n - 2; i >= 0; i--) {
            right *= nums[i + 1];
            ans[i] *= right;
        }
        return ans;
    }
}
